plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// 데이터베이스 설정 (개발: MySQL, 테스트: H2)
	runtimeOnly 'com.mysql:mysql-connector-j'   // 개발 환경 - MySQL
	testRuntimeOnly 'com.h2database:h2'         // 테스트 환경 - H2

	// ✅ Spring Security 추가 (JWT 적용을 위해 필요)
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'

	// ✅ JJWT 최신 버전 (0.12.6) 추가
	implementation("io.jsonwebtoken:jjwt-api:0.12.6")
	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.12.6")
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.12.6")
	// 데이터베이스 설정 (개발: MySQL, 테스트: H2)// 개발 환경 - MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'
	testRuntimeOnly 'com.h2database:h2'            // 테스트 환경 - H2

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
